<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="20" total="30" passed="6" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-20T17:29:24 EDT" name="Default suite" finished-at="2023-08-20T17:31:11 EDT" duration-ms="106453">
    <groups>
    </groups>
    <test started-at="2023-08-20T17:29:24 EDT" name="Default test" finished-at="2023-08-20T17:31:11 EDT" duration-ms="106453">
      <class name="DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:24 EDT" name="beforeSuite" finished-at="2023-08-20T17:29:24 EDT" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:24 EDT" name="beforeTest" finished-at="2023-08-20T17:29:24 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="setConditions()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:24 EDT" name="setConditions" finished-at="2023-08-20T17:29:24 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setConditions -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:25 EDT" name="beforeMethod" finished-at="2023-08-20T17:29:27 EDT" duration-ms="2269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="signUpTest(java.lang.String)[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:27 EDT" name="signUpTest" data-provider="fetchData" finished-at="2023-08-20T17:29:28 EDT" duration-ms="1512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:28 EDT" name="afterMethod" finished-at="2023-08-20T17:29:29 EDT" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:29 EDT" name="beforeMethod" finished-at="2023-08-20T17:29:30 EDT" duration-ms="1482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="signUpTest(java.lang.String)[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:30 EDT" name="signUpTest" data-provider="fetchData" finished-at="2023-08-20T17:29:32 EDT" duration-ms="1590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test4546]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:32 EDT" name="afterMethod" finished-at="2023-08-20T17:29:32 EDT" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:29:32 EDT" name="afterClass" finished-at="2023-08-20T17:29:32 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:31:11 EDT" name="afterTest" finished-at="2023-08-20T17:31:11 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test@3cd3e762]" started-at="2023-08-20T17:31:11 EDT" name="afterSuite" finished-at="2023-08-20T17:31:11 EDT" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- DemoBlazeTests.TC_003_DemoBlaze_SignupRandom_Test -->
      <class name="DemoBlazeTests.TC_001_DemoBlaze_Signup_Test">
        <test-method is-config="true" signature="setConditions()[pri:0, instance:DemoBlazeTests.TC_001_DemoBlaze_Signup_Test@489115ef]" started-at="2023-08-20T17:29:32 EDT" name="setConditions" finished-at="2023-08-20T17:29:32 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setConditions -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_001_DemoBlaze_Signup_Test@489115ef]" started-at="2023-08-20T17:29:32 EDT" name="beforeMethod" finished-at="2023-08-20T17:29:33 EDT" duration-ms="1437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="signUpTest(java.lang.String,java.lang.String)[pri:0, instance:DemoBlazeTests.TC_001_DemoBlaze_Signup_Test@489115ef]" started-at="2023-08-20T17:29:33 EDT" name="signUpTest" data-provider="fetchData" finished-at="2023-08-20T17:29:35 EDT" duration-ms="1540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kk@mpk.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_001_DemoBlaze_Signup_Test@489115ef]" started-at="2023-08-20T17:29:35 EDT" name="afterMethod" finished-at="2023-08-20T17:29:35 EDT" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_001_DemoBlaze_Signup_Test@489115ef]" started-at="2023-08-20T17:29:35 EDT" name="beforeMethod" finished-at="2023-08-20T17:29:37 EDT" duration-ms="1536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="signUpTest(java.lang.String,java.lang.String)[pri:0, instance:DemoBlazeTests.TC_001_DemoBlaze_Signup_Test@489115ef]" started-at="2023-08-20T17:29:37 EDT" name="signUpTest" data-provider="fetchData" finished-at="2023-08-20T17:29:38 EDT" duration-ms="1569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hjr@rj.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test4546]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_001_DemoBlaze_Signup_Test@489115ef]" started-at="2023-08-20T17:29:38 EDT" name="afterMethod" finished-at="2023-08-20T17:29:38 EDT" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:DemoBlazeTests.TC_001_DemoBlaze_Signup_Test@489115ef]" started-at="2023-08-20T17:29:38 EDT" name="afterClass" finished-at="2023-08-20T17:29:38 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- DemoBlazeTests.TC_001_DemoBlaze_Signup_Test -->
      <class name="DemoBlazeTests.TC_006_AddToCartandPurchase">
        <test-method is-config="true" signature="setConditions()[pri:0, instance:DemoBlazeTests.TC_006_AddToCartandPurchase@3857f613]" started-at="2023-08-20T17:29:38 EDT" name="setConditions" finished-at="2023-08-20T17:29:38 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setConditions -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_006_AddToCartandPurchase@3857f613]" started-at="2023-08-20T17:29:38 EDT" name="beforeMethod" finished-at="2023-08-20T17:29:40 EDT" duration-ms="1511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addToCartTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:DemoBlazeTests.TC_006_AddToCartandPurchase@3857f613]" started-at="2023-08-20T17:29:40 EDT" name="addToCartTest" data-provider="fetchData" finished-at="2023-08-20T17:29:58 EDT" duration-ms="17904" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[ASUS Full HD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$230 *includes tax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Product added.]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ASUS Full HD]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Place order]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Naresh Gupta]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[USA]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Boston]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[234567890]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Jan]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[2025]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Thank you for your purchase!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at DemoBlazePages.DemoBlazeStorePage.GetAlertMSGandAccept(DemoBlazeStorePage.java:99)
at DemoBlazeTests.TC_006_AddToCartandPurchase.addToCartTest(TC_006_AddToCartandPurchase.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToCartTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_006_AddToCartandPurchase@3857f613]" started-at="2023-08-20T17:29:58 EDT" name="afterMethod" finished-at="2023-08-20T17:29:58 EDT" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:DemoBlazeTests.TC_006_AddToCartandPurchase@3857f613]" started-at="2023-08-20T17:29:58 EDT" name="afterClass" finished-at="2023-08-20T17:29:58 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- DemoBlazeTests.TC_006_AddToCartandPurchase -->
      <class name="DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS">
        <test-method is-config="true" signature="setConditions()[pri:0, instance:DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS@3c9754d8]" started-at="2023-08-20T17:30:41 EDT" name="setConditions" finished-at="2023-08-20T17:30:41 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setConditions -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS@3c9754d8]" started-at="2023-08-20T17:30:41 EDT" name="beforeMethod" finished-at="2023-08-20T17:30:43 EDT" duration-ms="1398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="SendContactMsg(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS@3c9754d8]" started-at="2023-08-20T17:30:43 EDT" name="SendContactMsg" data-provider="fetchData" finished-at="2023-08-20T17:30:56 EDT" duration-ms="12958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kk@mpk.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[naresh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[message from customer naresh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendContactMsg -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS@3c9754d8]" started-at="2023-08-20T17:30:56 EDT" name="afterMethod" finished-at="2023-08-20T17:30:56 EDT" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS@3c9754d8]" started-at="2023-08-20T17:30:56 EDT" name="beforeMethod" finished-at="2023-08-20T17:30:58 EDT" duration-ms="1549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="SendContactMsg(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS@3c9754d8]" started-at="2023-08-20T17:30:58 EDT" name="SendContactMsg" data-provider="fetchData" finished-at="2023-08-20T17:31:10 EDT" duration-ms="12909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hjr@rj.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hari]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[message from customer -  send refund]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendContactMsg -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS@3c9754d8]" started-at="2023-08-20T17:31:10 EDT" name="afterMethod" finished-at="2023-08-20T17:31:11 EDT" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS@3c9754d8]" started-at="2023-08-20T17:31:11 EDT" name="afterClass" finished-at="2023-08-20T17:31:11 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- DemoBlazeTests.TC_004_DemoBlaze_SendMSG_ContactUS -->
      <class name="DemoBlazeTests.TC_005_AddToCartTest">
        <test-method is-config="true" signature="setConditions()[pri:0, instance:DemoBlazeTests.TC_005_AddToCartTest@7c6908d7]" started-at="2023-08-20T17:30:22 EDT" name="setConditions" finished-at="2023-08-20T17:30:22 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setConditions -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_005_AddToCartTest@7c6908d7]" started-at="2023-08-20T17:30:22 EDT" name="beforeMethod" finished-at="2023-08-20T17:30:23 EDT" duration-ms="1519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addToCartTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:DemoBlazeTests.TC_005_AddToCartTest@7c6908d7]" started-at="2023-08-20T17:30:23 EDT" name="addToCartTest" data-provider="fetchData" finished-at="2023-08-20T17:30:41 EDT" duration-ms="17858" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[ASUS Full HD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$230 *includes tax]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Product added.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at DemoBlazePages.DemoBlazeStorePage.GetAlertMSGandAccept(DemoBlazeStorePage.java:99)
at DemoBlazeTests.TC_005_AddToCartTest.addToCartTest(TC_005_AddToCartTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToCartTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_005_AddToCartTest@7c6908d7]" started-at="2023-08-20T17:30:41 EDT" name="afterMethod" finished-at="2023-08-20T17:30:41 EDT" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:DemoBlazeTests.TC_005_AddToCartTest@7c6908d7]" started-at="2023-08-20T17:30:41 EDT" name="afterClass" finished-at="2023-08-20T17:30:41 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- DemoBlazeTests.TC_005_AddToCartTest -->
      <class name="DemoBlazeTests.TC_002_DemoBlaze_Login_Test">
        <test-method is-config="true" signature="setConditions()[pri:0, instance:DemoBlazeTests.TC_002_DemoBlaze_Login_Test@198b6731]" started-at="2023-08-20T17:29:58 EDT" name="setConditions" finished-at="2023-08-20T17:29:58 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setConditions -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_002_DemoBlaze_Login_Test@198b6731]" started-at="2023-08-20T17:29:58 EDT" name="beforeMethod" finished-at="2023-08-20T17:29:59 EDT" duration-ms="1491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="logInTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:DemoBlazeTests.TC_002_DemoBlaze_Login_Test@198b6731]" started-at="2023-08-20T17:29:59 EDT" name="logInTest" data-provider="fetchData" finished-at="2023-08-20T17:30:10 EDT" duration-ms="10261" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[kk@mpk.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Welcome kk@mpk.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot find elements when the XPath is null.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot find elements when the XPath is null.
at org.openqa.selenium.internal.Require$ArgumentChecker.nonNull(Require.java:207)
at org.openqa.selenium.By$ByXPath.<init>(By.java:287)
at org.openqa.selenium.By.xpath(By.java:89)
at wrappers.GenericWrappers.clickByXpath(GenericWrappers.java:590)
at DemoBlazePages.DemoBlazeLoginPage.clickLoginButton(DemoBlazeLoginPage.java:39)
at DemoBlazeTests.TC_002_DemoBlaze_Login_Test.logInTest(TC_002_DemoBlaze_Login_Test.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_002_DemoBlaze_Login_Test@198b6731]" started-at="2023-08-20T17:30:10 EDT" name="afterMethod" finished-at="2023-08-20T17:30:10 EDT" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoBlazeTests.TC_002_DemoBlaze_Login_Test@198b6731]" started-at="2023-08-20T17:30:10 EDT" name="beforeMethod" finished-at="2023-08-20T17:30:11 EDT" duration-ms="1446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="logInTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:DemoBlazeTests.TC_002_DemoBlaze_Login_Test@198b6731]" started-at="2023-08-20T17:30:11 EDT" name="logInTest" data-provider="fetchData" finished-at="2023-08-20T17:30:22 EDT" duration-ms="10252" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[hjr@rj.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test4546]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Welcome hjr@rj.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot find elements when the XPath is null.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot find elements when the XPath is null.
at org.openqa.selenium.internal.Require$ArgumentChecker.nonNull(Require.java:207)
at org.openqa.selenium.By$ByXPath.<init>(By.java:287)
at org.openqa.selenium.By.xpath(By.java:89)
at wrappers.GenericWrappers.clickByXpath(GenericWrappers.java:590)
at DemoBlazePages.DemoBlazeLoginPage.clickLoginButton(DemoBlazeLoginPage.java:39)
at DemoBlazeTests.TC_002_DemoBlaze_Login_Test.logInTest(TC_002_DemoBlaze_Login_Test.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:DemoBlazeTests.TC_002_DemoBlaze_Login_Test@198b6731]" started-at="2023-08-20T17:30:22 EDT" name="afterMethod" finished-at="2023-08-20T17:30:22 EDT" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:DemoBlazeTests.TC_002_DemoBlaze_Login_Test@198b6731]" started-at="2023-08-20T17:30:22 EDT" name="afterClass" finished-at="2023-08-20T17:30:22 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- DemoBlazeTests.TC_002_DemoBlaze_Login_Test -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
